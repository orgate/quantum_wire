#############################################################################################################
#																											#
#	Title			:	Spin transfer torque for different wire sizes at a particular distance				#
#	Author			:	Alfred Ajay Aureate R																#
#	Roll No			:	EE10B052																			#
#	Project guide	:	Prof. Anil Prabhakar, Dept.of Electrical Engineering, IITM							#
#	Code location	:	/DDP_codes/stt/dist/stt_vs_lw.py													#
#	Figure ref.		:	Figure 4.7																			#
#	Date			:	19th May, 2015																		#
#																											#
#############################################################################################################

from __future__ import division
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
import matplotlib.pyplot as plt
import numpy as np
import scipy.special as sp
import scipy
import cmath as c
from scipy.sparse.linalg import lobpcg
from scipy import sparse
from pyamg import smoothed_aggregation_solver
from pyamg.gallery import poisson
import defs as d								# Importing custom library

#############################################################################################################
# Sizes at which EF (Fermi level) = eigen energy level (making sure one extra level gets below EF)			#
#############################################################################################################
Narray = np.array([53, 67, 74, 85, 97, 100])
Karray = np.array([2, 3, 5, 7, 9, 10])
x = np.arange(0,10,0.1)+0j

#############################################################################################################
# Incident, reflected and transmitted transverse spin currents initalized and calculated for different wire #
# sizes																										#
#############################################################################################################
Qin = np.zeros((len(x),len(Narray)))
Qref = np.zeros((len(x),len(Narray)))
Qtra = np.zeros((len(x),len(Narray)))
for i in range(len(Narray)):
	q = np.sqrt(d.solve(Narray[i],Karray[i]+1)+0j)
	dq = np.roll(q,-1) - q
	dq[-1] = 1-q[-1]							# differential used for integrating over all eigen modes
	rsts = d.RsTs(q)							# gets reflection and transmission related parameters

	Qin[:,i] = np.ones(len(x))*np.cumsum(q*dq)[-1]
	Qref[:,i] = np.cumsum(q*dq*abs(rsts[3].conjugate()*rsts[4]))[-1]/Qin[:,i]
	for j in range(len(x)):
		Qtra[j,i] = np.cumsum(q*dq*abs((rsts[1]+rsts[2])*rsts[5].conjugate()*rsts[6]/(2*rsts[0])*np.exp(-1j*(rsts[1]-rsts[2])*x[j])))[-1]/Qin[j,i]
#############################################################################################################
# Spin transfer torque per unit area																		#
#############################################################################################################
Qtra = Qin - Qtra + Qref

#############################################################################################################
# Plotting of the Spin transfer torque for several wire sizes st a particular distance						#
#############################################################################################################
pltmr0, = plt.plot(Narray/10,Qtra[0,:])
pltmr1, = plt.plot(Narray/10,Qtra[24,:])
pltmr2, = plt.plot(Narray/10,Qtra[49,:])
pltmr3, = plt.plot(Narray/10,Qtra[74,:])
pltmr4, = plt.plot(Narray/10,Qtra[99,:])
plt.legend([pltmr0, pltmr1, pltmr2, pltmr3, pltmr4],["$K_Fx=0$", "$K_Fx=2.5$", "$K_Fx=5$", "$K_Fx=7.5$", "$K_Fx=10$"],loc=4)
plt.ylabel('$STT$ per unit area')

plt.xlabel('Wire size (in $nm$))')

plt.show()
